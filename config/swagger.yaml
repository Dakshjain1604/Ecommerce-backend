openapi: 3.0.3
info:
  title: Orders API
  description: API for managing orders and user authentication
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
  -url: https://51ed-157-38-115-182.ngrok-free.app 
    description: ngrok server 

paths:
  /orders/create:
    post:
      summary: Create a new order
      description: Endpoint to create a new order.
      operationId: createOrder
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  example: 1
                quantity:
                  type: integer
                  example: 1
              required:
                - productId
                - quantity
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: "Order created successfully"
        '400':
          description: Bad Request, invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input data"
        '401':
          description: Unauthorized, invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"

  /auth/register:
    post:
      summary: Register a new user
      description: Endpoint to register a new user.
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: daksh
                email:
                  type: string
                  example: daksh@gmail.com
                password:
                  type: string
                  example: Daksh@123
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: daksh
                  email:
                    type: string
                    example: daksh@gmail.com
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /auth/login:
    post:
      summary: User Login
      description: Endpoint for user authentication to receive a login token.
      requestBody:
        description: User credentials for login
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: moin@gmail.com
                password:
                  type: string
                  format: password
                  example: moin123
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authenticated sessions
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Bad Request, invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid email or password"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"

  /products:
    get:
      summary: Retrieve all products
      description: Endpoint to get a list of all products.
      operationId: getProducts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response with a list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized, invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"
    post:
      summary: Create a new product
      description: Endpoint to create a new product.
      operationId: createProduct
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "pen"
                description:
                  type: string
                  example: "blue pen"
                price:
                  type: number
                  format: float
                  example: 10
                stock:
                  type: integer
                  example: 100
              required:
                - name
                - description
                - price
                - stock
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: "Product created successfully"
        '400':
          description: Bad Request, invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input data"
        '401':
          description: Unauthorized, invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"

  /orders/all:
    get:
      summary: Retrieve all orders
      description: Endpoint to get a list of all orders.
      operationId: getAllOrders
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: JWT token for user authorization
          required: true
          schema:
            type: string
            example: Bearer YOUR_JWT_TOKEN_HERE
      responses:
        '200':
          description: Successful response with a list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized, invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"

  /auth/users:
    get:
      summary: Retrieve user information
      description: Endpoint to retrieve information about authenticated users.
      operationId: getUsers
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authorization
      responses:
        '200':
          description: Successful response with user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "daksh"
                  email:
                    type: string
                    example: "daksh@gmail.com"
        '400':
          description: Bad Request, invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request data"
        '401':
          description: Unauthorized, invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authorization

  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Sample Product"
        description:
          type: string
          example: "This is a sample product."
        price:
          type: number
          format: float
          example: 19.99
       
